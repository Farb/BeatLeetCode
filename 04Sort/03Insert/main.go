package main

// 插入排序：进行n-1轮排序，每轮排序从没有排好序的数组中取元素插入到已排好序的数组中
// 特别的，因为第一个元素已经是有序，所以只需要对剩余的n-1个元素进行排序，故需要n-1轮排序
// 每一轮排序的过程中， 待排序元素先和已排序数组的最后一个元素比较，如果前者比后者大，则不需要比较其他元素；
// 否则，将最后一个元素后移一位，继续和倒数第2个元素比较，以此类推。
func insertSort(nums []int) []int {
	for i := 1; i < len(nums); i++ {
		j := i - 1
		tmp := nums[i] //这里必须先保存待排元素到临时变量，否则元素的挪位会覆盖待排元素
		for ; j >= 0 && tmp < nums[j]; j-- {
			nums[j+1] = nums[j] // 每个元素后移一位
		}
		if i != j+1 { // 如果待排元素>=已排好序的最后一个元素，跳过本轮排序
			nums[j+1] = tmp
		}
	}
	return nums
}
